# Debug
 # Change the variable to debug
 #export DEBUGCLI=YES
if [[ $DEBUGCLI == "YES" ]]; then
  echo "Start .zshenv"
fi

# Functions
function debug_file_call() {
  echo "funcfiletrace: $funcfiletrace"
  echo "funcstack: $funcstack"
  echo "PATH: '${(F)path}'"
}

function command_exists() {
  # `command -v` is similar to `which`
  # https://stackoverflow.com/a/677212/1341838
  command -v $1 >/dev/null 2>&1
}

# Write Handy Functions
function mkcd() {
  mkdir -p "$@" && cd "$_" || exit; # [ShellCheck: SC2164 – Use `cd ... || exit` in case `cd` fails.](https://www.shellcheck.net/wiki/SC2164)
}

# Exports

## Setup directories
export ZDOTDIR="$HOME"

## XDG Base Directory [[[1
# Ref: https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
# and: https://wiki.archlinux.org/title/XDG_Base_Directory
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_DATA_HOME="$HOME/.local/share"

## Personal config
export EMAIL="larstomas@gmail.com"
export HISTIGNORE='*sudo -S*'

## 1Password
export PRIVATE_ONEPASSWORD_SUBDOMAIN="backman" # Setup 1Password
export SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock # Setup 1Password: https://developer.1password.com/docs/ssh/agent/compatibility#ssh-auth-sock
source $HOME/.config/op/plugins.sh # Setup 1Password # First run, for example: $ op plugin init brew

## Homebrew
# shellcheck disable=SC1054,SC1073,SC1009,SC1065,SC1050,SC1072  # Template code
{{ if (and (eq .chezmoi.os "darwin") (eq .chezmoi.arch "arm64")) }}eval "$(/opt/homebrew/bin/brew shellenv)"
{{ else if (and (eq .chezmoi.os "darwin") (eq .chezmoi.arch "amd64")) }}eval "$(/usr/local/bin/brew shellenv)"
{{ else if (eq .chezmoi.os "linux")}}eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
{{- end }}
HOMEBREW_PREFIX="$(brew --prefix)" # [ShellCheck: SC2155 – Declare and assign separately to avoid masking return values.](https://www.shellcheck.net/wiki/SC2155)
export HOMEBREW_PREFIX
HOMEBREW_CELLAR="$(brew --cellar)"
export HOMEBREW_CELLAR
HOMEBREW_REPOSITORY="$(brew --repository)"
export HOMEBREW_REPOSITORY
export HOMEBREW_CASK_OPTS="--no-quarantine"  # Disable Gatekeaper warning. Why use "--no-binaries"
export HOMEBREW_AUTOREMOVE=1
export HOMEBREW_GITHUB_API_TOKEN={{ onepasswordRead "op://Personal/Github/HOMEBREW_API_TOKEN" }}
### Homebrew zsh autocompletions
FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

## Nvim
export EDITOR='nvim'
export GIT_EDITOR='nvim'

## Chezmoi
export DOTFILES="$HOME/.dotfiles"
export HOMEBREW_BUNDLE_FILE="$DOTFILES/Brewfile"
export HOMEBREW_BUNDLE_NO_LOCK=true

## libpq aka Postgres C API library
export LDFLAGS="-L$HOMEBREW_PREFIX/opt/libpq/lib"
export CPPFLAGS="-I$HOMEBREW_PREFIX/opt/libpq/include"
export PKG_CONFIG_PATH="$HOMEBREW_PREFIX/opt/libpq/lib/pkgconfig"
export PATH="$HOMEBREW_PREFIX/opt/libpq/bin:$PATH"

## n the Node.js manager
export N_PREFIX="$HOME/.n"
export PREFIX="$N_PREFIX"

## Repositories
export ZENSEACT_REPOS="${HOME}/repos/zenseact"
export OXYGEN_REPO="${ZENSEACT_REPOS}/oxygen"
export OCEAN_REPO="${ZENSEACT_REPOS}/ocean"

## User variables
export USER_SCRIPTS="${HOME}/Sync/Programmering/scripts"
export PATH="${USER_SCRIPTS}:${PATH}"

# Debug
 # Change the variable to debug
 #export DEBUGCLI=YES
if [[ $DEBUGCLI == "YES" ]]; then
  debug_file_call
  echo "End .zshenv"
fi
